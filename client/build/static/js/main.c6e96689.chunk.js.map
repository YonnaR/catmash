{"version":3,"sources":["components/Activity-Indactor/ActivityIndicator.js","assets/img/catmash.png","components/Error-Boundary/ErrorBoundary.js","components/Header/Header.js","components/Footer/Footer.js","AppRouter.js","App.js","serviceWorker.js","index.js"],"names":["__webpack_require__","d","__webpack_exports__","ActivityIndicator","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","reactstrap__WEBPACK_IMPORTED_MODULE_1__","a","createElement","className","type","color","module","exports","p","Fallback","React","memo","styled","_ref","react_default","classnames","alert_triangle_default","size","_templateObject","state","hasError","error","this","props","children","Component","Header","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","setState","collapsed","Navbar","expand","light","NavbarBrand","href","src","Logo","style","height","alt","NavbarToggler","onClick","Collapse","isOpen","navbar","Nav","NavItem","NavLink","Footer","HomePage","lazy","Promise","all","e","then","bind","ScorePage","NotFoundPage","AppRouter","ErrorBoundary_default","Header_Header","react","maxDuration","fallback","react_router_dom","lib_default","id","debug","react_router","exact","path","component","to","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c6e96689.chunk.js","sourcesContent":["import React from 'react'\nimport { Spinner } from 'reactstrap'\nexport default function ActivityIndicator() {\n  return (\n    <div className=\"center\">\n      <Spinner type=\"grow\" color=\"primary\" />\n      <Spinner type=\"grow\" color=\"primary\" />\n      <Spinner type=\"grow\" color=\"primary\" />\n      <Spinner type=\"grow\" color=\"primary\" />\n      <Spinner type=\"grow\" color=\"primary\" />\n    </div>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/catmash.5ada6b29.png\";","import React from \"react\";\nimport classnames from \"classnames\";\nimport styled from \"styled-components\";\nimport Alert from \"react-feather/dist/icons/alert-triangle\";\n\nconst Fallback = React.memo(styled(({ className }) => (\n  <div className={classnames(\"error-boundary\", className)}>\n    <Alert color=\"orange\" size={48} />\n    <span>Something went wrong</span>\n  </div>\n))`\n  display: flex;\n  flex-flow: row wrap;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  align-items: center;\n  align-content: center;\n  justify-content: center;\n\n  span {\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    margin-top: 1rem;\n    font-weight: 500;\n    font-size: 1.25rem;\n    color: #333;\n  }\n`);\n\nexport default class extends React.Component {\n  state = { hasError: false, error: null };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true, error };\n  }\n\n  render() {\n    return this.state.hasError ? <Fallback /> : this.props.children;\n  }\n}","import React from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport Logo from '../../assets/img/catmash.png';\nexport default class Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar=()=>{\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar expand=\"md\" light>\n          <NavbarBrand href=\"/\" className=\"center\">\n              <div>\n                <img src={Logo} style={{height:\"150px\"}} alt=\"wbesite logo\"/>\n              </div>\n          </NavbarBrand>\n          <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n          <Collapse isOpen={!this.state.collapsed} navbar>\n            <Nav navbar>\n              <NavItem>\n                <NavLink href=\"/\">Let's CatMash</NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/#/score\">Scoring</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport default function Footer() {\n    return (\n        <div className=\"text-right\">\n            <p className=\"navbar-brand \" >Bootstraped with <i className=\"fas fa-heart red\"></i> by <a href=\"https://www.yoannfort.ga/\">YonnaR </a></p>\n        </div>\n    )\n}\n","import React, { Suspense } from 'react';\nimport { Switch, HashRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Analytics from 'react-router-ga';\nimport ActivityIndicator from './components/Activity-Indactor/ActivityIndicator';\nimport ErrorBoundary from './components/Error-Boundary/ErrorBoundary';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\n\n\n/* Lazy load View Component here */\nconst HomePage = React.lazy(() =>import('./views/home-page/HomePage') )\nconst ScorePage = React.lazy(() =>import('./views/score-page/ScorePage') )\nconst NotFoundPage = React.lazy(() =>import('./views/not-found-page/NotFoundPage'))\n\n\n/* Simple router */\nexport default function AppRouter() {\n    return (\n        <ErrorBoundary>\n            <Header/>\n            <br/>\n            <Suspense maxDuration={300} fallback={<ActivityIndicator />}>\n\n            <Router>\n                <Analytics id=\"UA-141223150-1\" debug={false}>\n                <Switch>\n                    <Route exact path=\"/\" component={HomePage} />\n                    <Route path=\"/score\" component={ScorePage}/>\n                    <Route path=\"/not-found\" component={NotFoundPage}/>\n                    <Redirect to=\"/not-found\" />\n                </Switch>\n                </Analytics>\n            </Router>\n\n            </Suspense>\n            <br/><br/><br/>\n            <Footer/>\n        </ErrorBoundary>\n        \n    )\n}\n\n\n","import React from 'react';\nimport AppRouter from './AppRouter';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <AppRouter/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './assets/css/index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}